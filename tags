!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
RETURN	minilibx/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
X_ShmAttach	minilibx/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
add_strings	libft/srcs/float_tools.c	/^void	add_strings(char *dst, char *src, int len)$/;"	f
alloc_tab	data_man.c	/^int		alloc_tab(t_map *map, t_point *pt)$/;"	f
apply_d_rounding	libft/srcs/float_tools.c	/^void	apply_d_rounding(t_d_arrs *a_ptr, int prec)$/;"	f
apply_ld_rounding	libft/srcs/float_tools.c	/^void	apply_ld_rounding(t_ld_arrs *a_ptr, int prec)$/;"	f
calc_len_address	libft/srcs/address_tools.c	/^int		calc_len_address(t_conv_id *s_ptr, unsigned long value)$/;"	f
calc_len_double	libft/srcs/double.c	/^int		calc_len_double(t_d_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr)$/;"	f
calc_len_hexa	libft/srcs/hexa_tools.c	/^int	calc_len_hexa(t_conv_id *s_ptr, unsigned long long value)$/;"	f
calc_len_int	libft/srcs/int_tools.c	/^int		calc_len_int(t_conv_id *s_ptr, long long int value)$/;"	f
calc_len_ldouble	libft/srcs/ldouble.c	/^int		calc_len_ldouble(t_ld_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr)$/;"	f
calc_len_octal	libft/srcs/octal_tools.c	/^int	calc_len_octal(t_conv_id *s_ptr, unsigned long long value)$/;"	f
calc_len_percent	libft/srcs/percent.c	/^int		calc_len_percent(t_conv_id *s_ptr)$/;"	f
calc_len_string	libft/srcs/string.c	/^int			calc_len_string(t_conv_id *s_ptr, char *str)$/;"	f
calc_len_unsigned	libft/srcs/unsigned_tools.c	/^int		calc_len_unsigned(t_conv_id *s_ptr, unsigned long long value)$/;"	f
check_conversion	libft/srcs/ft_printf.c	/^int			check_conversion(const char *str)$/;"	f
check_int_struct	libft/srcs/int_tools.c	/^int		check_int_struct(t_conv_id *ptr)$/;"	f
check_octal_struct	libft/srcs/octal_tools.c	/^int	check_octal_struct(t_conv_id *s_ptr)$/;"	f
check_special_value	libft/srcs/special.c	/^int		check_special_value(t_s_e_m *dble_ptr)$/;"	f
check_unsigned_struct	libft/srcs/unsigned_tools.c	/^int		check_unsigned_struct(t_conv_id *ptr)$/;"	f
clean_board	parsing.c	/^void	clean_board(t_map *map)$/;"	f
conv_path	libft/srcs/ft_printf.c	/^t_point		conv_path(const char *fmt, va_list *arg_ptr)$/;"	f
data_trans	data_man.c	/^int 	data_trans(t_map *map)$/;"	f
dispay	parsing.c	/^void	dispay(char **board)$/;"	f
divide_str_by_two	libft/srcs/float_tools.c	/^void	divide_str_by_two(char *str, int len)$/;"	f
double_exponant	libft/srcs/double_tools.c	/^void	double_exponant(t_s_e_m *dble_ptr, t_d_arrs *a_ptr)$/;"	f
double_mantissa	libft/srcs/double_tools.c	/^void	double_mantissa(t_s_e_m *dble_ptr, t_d_arrs *a_ptr)$/;"	f
double_rounding	libft/srcs/double_tools.c	/^void	double_rounding(t_d_arrs *a_ptr, t_conv_id *s_ptr)$/;"	f
draw_line_high	line.c	/^int		*draw_line_high(int *data, t_point A, t_point B)$/;"	f
draw_line_low	line.c	/^int		*draw_line_low(int *data, t_point A, t_point B)$/;"	f
draw_p	tracer.c	/^int		*draw_p(int *data, t_map *map)$/;"	f
event	main.c	/^void	event(t_mlx *mlx)$/;"	f
expose_hook	key_press.c	/^void		expose_hook(t_mlx *mlx)$/;"	f
fill_arr	libft/srcs/func_selector.c	/^void			fill_arr(t_conv_func *arr)$/;"	f
fill_d_tabs	libft/srcs/double_tools.c	/^void	fill_d_tabs(t_d_arrs *a_ptr, t_s_e_m *dble_ptr, t_conv_id *s_ptr)$/;"	f
fill_ld_tabs	libft/srcs/ldouble_tools.c	/^void	fill_ld_tabs(t_ld_arrs *a_ptr, t_s_e_m *dble_ptr, t_conv_id *s_ptr)$/;"	f
fill_line	libft/srcs/get_next_line.c	/^char	*fill_line(t_data *current, char **line, int old_chars)$/;"	f
fill_tab	data_man.c	/^void	fill_tab(t_map *map, t_point *pt)$/;"	f
flag	libft/srcs/pflags.c	/^int		flag(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
flags_in_struct	libft/srcs/pflags.c	/^void	flags_in_struct(char c, t_conv_id *struct_ptr)$/;"	f
free_exit	libft/srcs/get_next_line.c	/^void	free_exit(t_list **head, t_data *current)$/;"	f
ft_2lstadd_first	libft/srcs/ft_2lstadd_first.c	/^void	ft_2lstadd_first(t_2list **alst, t_2list *new)$/;"	f
ft_2lstadd_last	libft/srcs/ft_2lstadd_last.c	/^void	ft_2lstadd_last(t_2list **alst, t_2list *new)$/;"	f
ft_2lstdel	libft/srcs/ft_2lstdel.c	/^void	ft_2lstdel(t_2list **alst, void (*del)(void *))$/;"	f
ft_2lstdelnext	libft/srcs/ft_2lstdelnext.c	/^void	ft_2lstdelnext(t_2list **alst, void (*del)(void *))$/;"	f
ft_2lstdelone	libft/srcs/ft_2lstdelone.c	/^void	ft_2lstdelone(t_2list **alst, void (*del)(void *))$/;"	f
ft_2lstnew	libft/srcs/ft_2lstnew.c	/^t_2list	*ft_2lstnew(void const *cntent, size_t cntent_size)$/;"	f
ft_atoi	libft/srcs/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_bzero	libft/srcs/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_conv_address	libft/srcs/address.c	/^int		ft_conv_address(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_char	libft/srcs/char.c	/^int	ft_conv_char(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_double	libft/srcs/float.c	/^int		ft_conv_double(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_float	libft/srcs/float.c	/^int		ft_conv_float(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_hexa	libft/srcs/hexa.c	/^int		ft_conv_hexa(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_hexa_upper	libft/srcs/hexa_upper.c	/^int		ft_conv_hexa_upper(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_int	libft/srcs/int.c	/^int		ft_conv_int(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_ldouble	libft/srcs/float.c	/^int		ft_conv_ldouble(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_octal	libft/srcs/octal.c	/^int		ft_conv_octal(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_percent	libft/srcs/percent.c	/^int		ft_conv_percent(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_string	libft/srcs/string.c	/^int			ft_conv_string(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_unsigned	libft/srcs/unsigned.c	/^int		ft_conv_unsigned(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_count_words	libft/srcs/ft_strsplit.c	/^static int	ft_count_words(char const *s, char c)$/;"	f	file:
ft_double_special	libft/srcs/special.c	/^int		ft_double_special(t_conv_id *s_ptr, t_s_e_m *dble)$/;"	f
ft_isalnum	libft/srcs/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f
ft_isalpha	libft/srcs/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f
ft_isascii	libft/srcs/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f
ft_isdigit	libft/srcs/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f
ft_isprint	libft/srcs/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f
ft_itoa	libft/srcs/ft_itoa.c	/^char		*ft_itoa(int n)$/;"	f
ft_itoa_base	libft/srcs/ft_itoa_base.c	/^char	*ft_itoa_base(int value, int base)$/;"	f
ft_longd_special	libft/srcs/special.c	/^int		ft_longd_special(t_conv_id *s_ptr, t_s_e_m *dble)$/;"	f
ft_lstadd	libft/srcs/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *new)$/;"	f
ft_lstdel	libft/srcs/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void*, size_t))$/;"	f
ft_lstdelone	libft/srcs/ft_lstdelone.c	/^void	ft_lstdelone(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstiter	libft/srcs/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstmap	libft/srcs/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	libft/srcs/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_memalloc	libft/srcs/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/;"	f
ft_memccpy	libft/srcs/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	libft/srcs/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/srcs/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/srcs/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memdel	libft/srcs/ft_memdel.c	/^void	ft_memdel(void **ap)$/;"	f
ft_memmove	libft/srcs/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	libft/srcs/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_nbrlen	libft/srcs/ft_itoa_base.c	/^int		ft_nbrlen(int value, int base)$/;"	f
ft_need_trim	libft/srcs/ft_strtrim.c	/^static	int		ft_need_trim(char const *s, int len)$/;"	f	file:
ft_printf	libft/srcs/ft_printf.c	/^int			ft_printf(const char *format, ...)$/;"	f
ft_putchar	libft/srcs/ft_putchar.c	/^void	ft_putchar(char c)$/;"	f
ft_putchar_fd	libft/srcs/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl	libft/srcs/ft_putendl.c	/^void	ft_putendl(char const *s)$/;"	f
ft_putendl_fd	libft/srcs/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putnbr	libft/srcs/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f
ft_putnbr_fd	libft/srcs/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr	libft/srcs/ft_putstr.c	/^void	ft_putstr(char const *s)$/;"	f
ft_putstr_fd	libft/srcs/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f
ft_strcat	libft/srcs/ft_strcat.c	/^char	*ft_strcat(char *s1, const char *s2)$/;"	f
ft_strchr	libft/srcs/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strclr	libft/srcs/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f
ft_strcmp	libft/srcs/ft_strcmp.c	/^int	ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcpy	libft/srcs/ft_strcpy.c	/^char	*ft_strcpy(char *dst, const char *src)$/;"	f
ft_strdel	libft/srcs/ft_strdel.c	/^void	ft_strdel(char **as)$/;"	f
ft_strdup	libft/srcs/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strequ	libft/srcs/ft_strequ.c	/^int	ft_strequ(char const *s1, char const *s2)$/;"	f
ft_striter	libft/srcs/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	libft/srcs/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	libft/srcs/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	libft/srcs/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	libft/srcs/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f
ft_strmap	libft/srcs/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	libft/srcs/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncat	libft/srcs/ft_strncat.c	/^char	*ft_strncat(char *s1, const char *s2, size_t n)$/;"	f
ft_strncmp	libft/srcs/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncpy	libft/srcs/ft_strncpy.c	/^char	*ft_strncpy(char *dst, const char *src, size_t len)$/;"	f
ft_strnequ	libft/srcs/ft_strnequ.c	/^int	ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnew	libft/srcs/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f
ft_strnstr	libft/srcs/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	libft/srcs/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strsplit	libft/srcs/ft_strsplit.c	/^char		**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	libft/srcs/ft_strstr.c	/^char	*ft_strstr(const char *haystack, const char *needle)$/;"	f
ft_strsub	libft/srcs/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int start, size_t len)$/;"	f
ft_strtrim	libft/srcs/ft_strtrim.c	/^char			*ft_strtrim(char const *s)$/;"	f
ft_tolower	libft/srcs/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f
ft_toupper	libft/srcs/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f
ft_wordlen	libft/srcs/ft_strsplit.c	/^static int	ft_wordlen(char const *s, char c)$/;"	f	file:
ftoa_double	libft/srcs/double.c	/^int		ftoa_double(t_s_e_m *dble, t_conv_id *s_ptr)$/;"	f
ftoa_ldouble	libft/srcs/ldouble.c	/^int		ftoa_ldouble(t_s_e_m *dble, t_conv_id *s_ptr)$/;"	f
get_address_value	libft/srcs/address_tools.c	/^void	get_address_value(unsigned long *val_ptr, va_list *arg_ptr)$/;"	f
get_double_value	libft/srcs/double_tools.c	/^void	get_double_value(va_list *arg_ptr, t_s_e_m *dble_ptr)$/;"	f
get_func	libft/srcs/func_selector.c	/^t_conv_func		get_func(char c)$/;"	f
get_int_value	libft/srcs/int_tools.c	/^void	get_int_value(long long int *val_ptr, va_list *arg_ptr,$/;"	f
get_ldouble_value	libft/srcs/ldouble_tools.c	/^void	get_ldouble_value(va_list *arg_ptr, t_s_e_m *dble_ptr)$/;"	f
get_next_line	libft/srcs/get_next_line.c	/^int		get_next_line(int fd, char **line)$/;"	f
get_unsigned_value	libft/srcs/unsigned_tools.c	/^void	get_unsigned_value(unsigned long long *val_ptr, va_list *arg_ptr,$/;"	f
init	libft/srcs/get_next_line.c	/^t_data	*init(int fd, t_list **alst)$/;"	f
init_mlx	main.c	/^void	init_mlx(t_mlx *mlx, t_map *map)$/;"	f
int_len	libft/srcs/int_tools.c	/^int		int_len(long long int val)$/;"	f
is_map	parsing.c	/^int		is_map(char *str)$/;"	f
key_press	key_press.c	/^int		key_press(int keycode, void *param)$/;"	f
ldouble_exponant	libft/srcs/ldouble_tools.c	/^void	ldouble_exponant(t_s_e_m *dble_ptr, t_ld_arrs *a_ptr)$/;"	f
ldouble_mantissa	libft/srcs/ldouble_tools.c	/^void	ldouble_mantissa(unsigned long long mant, t_ld_arrs *a_ptr)$/;"	f
ldouble_rounding	libft/srcs/ldouble_tools.c	/^void	ldouble_rounding(t_ld_arrs *a_ptr, t_conv_id *s_ptr)$/;"	f
len_modifier	libft/srcs/plenmodifier.c	/^int	len_modifier(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
len_modifier_in_struct	libft/srcs/plenmodifier.c	/^int	len_modifier_in_struct(char *ptr, int len, t_conv_id *struct_ptr)$/;"	f
list_to_array	parsing.c	/^int		list_to_array(t_map *map, t_list *head, int c)$/;"	f
longd_special_value	libft/srcs/special.c	/^int		longd_special_value(t_s_e_m *dble_ptr)$/;"	f
loop_conv	libft/srcs/ft_printf.c	/^int			loop_conv(const char *fmt, va_list *arg_ptr, int written)$/;"	f
main	main.c	/^int		main(int ac, char **av)$/;"	f
min_int	libft/srcs/ft_itoa.c	/^static char	*min_int(void)$/;"	f	file:
min_int	libft/srcs/ft_itoa_base.c	/^char	*min_int(void)$/;"	f
minus_flag_address	libft/srcs/address.c	/^void	minus_flag_address(t_conv_id *s_ptr, int len, unsigned long nb)$/;"	f
minus_flag_double	libft/srcs/double.c	/^void	minus_flag_double(t_d_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr,$/;"	f
minus_flag_hexa	libft/srcs/hexa.c	/^void	minus_flag_hexa(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
minus_flag_hexa_upper	libft/srcs/hexa_upper.c	/^void	minus_flag_hexa_upper(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
minus_flag_ldouble	libft/srcs/ldouble.c	/^void	minus_flag_ldouble(t_ld_arrs *a_ptr, t_conv_id *s_ptr,$/;"	f
minus_flag_percent	libft/srcs/percent.c	/^void	minus_flag_percent(t_conv_id *s_ptr, int len)$/;"	f
minus_flag_unsigned	libft/srcs/unsigned.c	/^void	minus_flag_unsigned(t_conv_id *s_ptr, int len,$/;"	f
minus_int	libft/srcs/int.c	/^void	minus_int(t_conv_id *s_ptr, int len, long long int nb)$/;"	f
minus_octal	libft/srcs/octal.c	/^void	minus_octal(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
minus_special_value	libft/srcs/special_tools.c	/^void	minus_special_value(t_s_e_m *dble_ptr, t_conv_id *s_ptr)$/;"	f
minus_string	libft/srcs/string.c	/^void		minus_string(t_conv_id *s_ptr, int len, char *str)$/;"	f
mlx_X_error	minilibx/mlx_new_image.c	/^int	mlx_X_error;$/;"	v
mlx_clear_window	minilibx/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f
mlx_col_name	minilibx/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_destroy_image	minilibx/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f
mlx_destroy_window	minilibx/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f
mlx_do_key_autorepeatoff	minilibx/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f
mlx_do_key_autorepeaton	minilibx/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f
mlx_do_sync	minilibx/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f
mlx_expose_hook	minilibx/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_flush_event	minilibx/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f
mlx_get_color_value	minilibx/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f
mlx_get_data_addr	minilibx/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f
mlx_hook	minilibx/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f
mlx_init	minilibx/mlx_init.c	/^void		*mlx_init()$/;"	f
mlx_int_anti_resize_win	minilibx/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f
mlx_int_deal_shm	minilibx/mlx_init.c	/^int	mlx_int_deal_shm(t_xvar *xvar)$/;"	f
mlx_int_do_nothing	minilibx/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f
mlx_int_egal_img	minilibx/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f
mlx_int_file_get_rid_comment	minilibx/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_get_col_name	minilibx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_good_color	minilibx/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f
mlx_int_get_line	minilibx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_text_rgb	minilibx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_get_visual	minilibx/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f
mlx_int_new_image	minilibx/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f
mlx_int_new_xshm_image	minilibx/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f
mlx_int_param_ButtonPress	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_ButtonRelease	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_Expose	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_KeyPress	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_KeyRelease	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_MotionNotify	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_event	minilibx/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v
mlx_int_param_generic	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_undef	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f
mlx_int_parse_xpm	minilibx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f
mlx_int_rgb_conversion	minilibx/mlx_init.c	/^int	mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f
mlx_int_set_win_event_mask	minilibx/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f
mlx_int_static_line	minilibx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_str_str	minilibx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	minilibx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_to_wordtab	minilibx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_wait_first_expose	minilibx/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f
mlx_int_xpm_f_image	minilibx/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f
mlx_int_xpm_set_pixel	minilibx/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f
mlx_key_hook	minilibx/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_loop	minilibx/mlx_loop.c	/^int		mlx_loop(t_xvar *xvar)$/;"	f
mlx_loop_hook	minilibx/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f
mlx_mouse_hook	minilibx/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_new_image	minilibx/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f
mlx_new_image2	minilibx/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f
mlx_new_window	minilibx/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f
mlx_pixel_put	minilibx/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f
mlx_put_image_to_window	minilibx/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f
mlx_string_put	minilibx/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f
mlx_xpm_file_to_image	minilibx/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f
mlx_xpm_file_to_image	minilibx/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f
multiply_str_by_two	libft/srcs/float_tools.c	/^void	multiply_str_by_two(char *str, int len)$/;"	f
neg_ints	libft/srcs/ft_itoa.c	/^static char	*neg_ints(int n)$/;"	f	file:
negative	libft/srcs/ft_itoa_base.c	/^char	*negative(int value)$/;"	f
no_flag_address	libft/srcs/address.c	/^void	no_flag_address(t_conv_id *s_ptr, int len, unsigned long nb)$/;"	f
no_flag_double	libft/srcs/double.c	/^void	no_flag_double(t_d_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr,$/;"	f
no_flag_hexa	libft/srcs/hexa.c	/^void	no_flag_hexa(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
no_flag_hexa_upper	libft/srcs/hexa_upper.c	/^void	no_flag_hexa_upper(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
no_flag_int	libft/srcs/int.c	/^void	no_flag_int(t_conv_id *s_ptr, int len, long long int nb)$/;"	f
no_flag_ldouble	libft/srcs/ldouble.c	/^void	no_flag_ldouble(t_ld_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr,$/;"	f
no_flag_octal	libft/srcs/octal.c	/^void	no_flag_octal(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
no_flag_percent	libft/srcs/percent.c	/^void	no_flag_percent(t_conv_id *s_ptr, int len)$/;"	f
no_flag_string	libft/srcs/string.c	/^void		no_flag_string(t_conv_id *s_ptr, int len, char *str)$/;"	f
no_flag_unsigned	libft/srcs/unsigned.c	/^void	no_flag_unsigned(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
null_ptr	libft/srcs/address.c	/^int		null_ptr(t_conv_id *s_ptr, int len)$/;"	f
null_ptr_zero	libft/srcs/address.c	/^int		null_ptr_zero(t_conv_id *s_ptr, int len)$/;"	f
null_string	libft/srcs/string.c	/^int			null_string(t_conv_id *s_ptr)$/;"	f
parsing	libft/srcs/ft_printf.c	/^int			parsing(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
pos_ints	libft/srcs/ft_itoa.c	/^static char	*pos_ints(int n)$/;"	f	file:
precision	libft/srcs/pprecision.c	/^int		precision(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
precision_in_struct	libft/srcs/pprecision.c	/^void	precision_in_struct(char c, t_conv_id *struct_ptr)$/;"	f
read_to_list	parsing.c	/^int		read_to_list(int fd, t_map *map)$/;"	f
read_until	libft/srcs/get_next_line.c	/^int		read_until(t_data *current)$/;"	f
same_length	data_man.c	/^int		same_length(t_map *map)$/;"	f
scale	tracer.c	/^int		scale(t_map *map)$/;"	f
shm_att_pb	minilibx/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f
special_value	libft/srcs/special_tools.c	/^void	special_value(t_s_e_m *dble_ptr, t_conv_id *s_ptr, int len)$/;"	f
str_fill_char	libft/srcs/global_tools.c	/^int	str_fill_char(char *str, char c, int len)$/;"	f
unsigned_len_base	libft/srcs/global_tools.c	/^int	unsigned_len_base(unsigned long long val, unsigned base)$/;"	f
vol_to_iso	isometrique.c	/^void	vol_to_iso(t_map *map)$/;"	f
which_line	line.c	/^void	which_line(int *data, t_point A, t_point B)$/;"	f
width	libft/srcs/pwidth.c	/^int		width(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
width_in_struct	libft/srcs/pwidth.c	/^void	width_in_struct(char c, t_conv_id *struct_ptr)$/;"	f
zero_flag_double	libft/srcs/double.c	/^void	zero_flag_double(t_d_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr,$/;"	f
zero_flag_hexa	libft/srcs/hexa.c	/^void	zero_flag_hexa(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
zero_flag_hexa_upper	libft/srcs/hexa_upper.c	/^void	zero_flag_hexa_upper(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
zero_flag_ldouble	libft/srcs/ldouble.c	/^void	zero_flag_ldouble(t_ld_arrs *a_ptr, t_conv_id *s_ptr,$/;"	f
zero_flag_unsigned	libft/srcs/unsigned.c	/^void	zero_flag_unsigned(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
zero_no_prec_int	libft/srcs/int.c	/^void	zero_no_prec_int(t_conv_id *s_ptr, int len, long long int nb)$/;"	f
zero_no_prec_octal	libft/srcs/octal.c	/^void	zero_no_prec_octal(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
zero_zero_hexa	libft/srcs/hexa.c	/^void	zero_zero_hexa(t_conv_id *s_ptr, int len)$/;"	f
zero_zero_hexa_upper	libft/srcs/hexa_upper.c	/^void	zero_zero_hexa_upper(t_conv_id *s_ptr, int len)$/;"	f
zero_zero_int	libft/srcs/int.c	/^void	zero_zero_int(t_conv_id *s_ptr, int len)$/;"	f
zero_zero_octal	libft/srcs/octal.c	/^void	zero_zero_octal(t_conv_id *s_ptr, int len)$/;"	f
zero_zero_unsigned	libft/srcs/unsigned.c	/^void	zero_zero_unsigned(t_conv_id *s_ptr, int len)$/;"	f
